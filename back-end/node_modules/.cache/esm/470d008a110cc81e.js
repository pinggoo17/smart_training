let Koa,Router,bodyParser,mongoose,cors,api;_110‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_110‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_110‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_110‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_110‍.w("@koa/cors",[["default",["cors"],function(v){cors=v}]]);_110‍.w("./api",[["default",["api"],function(v){api=v}]]);require("dotenv").config();








const { PORT, MONGO_URI } = process.env;
const router = new Router();

let corsOptions = {
  origin: "*",
  credentials: true,
};

const app = new Koa();

app.use(cors(corsOptions));

mongoose
  .connect(MONGO_URI)
  .then(() => {
    console.log("Connected to MongoDB");
  })
  .catch((e) => {
    _110‍.g.console.error(e);
  });

router.use("/api", api.routes()); // api 라우트 적용

app.use(bodyParser());

router.get("/", (ctx) => {
  ctx.body = "홈";
});

app.use(router.routes()).use(router.allowedMethods);

const port = PORT || 4000;
app.listen(port, () => {
  console.log(`Listening to port ${port}`);
});
